AWSTemplateFormatVersion: "2010-09-09"
Description: Backup terraform.state to s3
Parameters:
  SourceBucketName:
    Description: Enter Source bucket name which stores back-up
    Type: String
    Default: backup-assets-dev
  SourceFile:
    Description: Enter Source bucket directory name which stores back-up
    Type: String
    Default: 2021-10-06-12-03-25.zip
  UserPoolID:
    Description: Enter user pool id to create cognito user
    Type: String
    Default: eu-west-1:9a586590-bbea-4de2-934f-04071974d6ea
  TempPassword:
    Description: Enter user temporary password to create cognito user
    Type: String
    Default: temp@221
  DestinationBucketName:
    Description: Enter Destination bucket name which stores terrafrom
    Type: String
    Default: restore-state
  SourceGihubRepoUrl:
    Description: Enter Github Repo url that contains build script and build files
    Type: String
    Default: https://github.com/dsuraj221/restore_gks/tree/master/build
  TemplatePath:
    Type: String
    Description: Path to CloudFormation templates (relative to top level of S3Bucket parameter)
    Default: /gks-pipeline-restore/
  S3Bucket:
    Type: String
    Default: gks-cluster-provisioner-infra-assets
  Environment:
    Type: String
    AllowedValues: 
        - dev 
        - test 
        - prod  
Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  Pipeline:
    DependsOn:
      - ArtifactStoreBucket
      - CodeBuildProject
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://
            - Ref: S3Bucket
            - .s3.
            - Ref: AWS::Region
            - .amazonaws.com
            - Ref: TemplatePath
            - pipeline.yml
      Parameters:
        ArtifactBucket:
          Ref: ArtifactStoreBucket        
        Environment:
          Ref: Environment 
        CodeBuildConf: !GetAtt "CodeBuildProject.Outputs.BackupPipelineBuild"           
      TimeoutInMinutes: "20"
  CodeBuildProject:    
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://
            - Ref: S3Bucket
            - .s3.
            - Ref: AWS::Region
            - .amazonaws.com
            - Ref: TemplatePath
            - build.yml
      Parameters: 
        DestinationBucketName:
          Ref: DestinationBucketName
        S3Bucket:
          Ref: S3Bucket
        SourceBucketName:
          Ref: SourceBucketName
        SourceFile:
          Ref: SourceFile
        UserPoolID:
          Ref: UserPoolID
        TempPassword:
          Ref: TempPassword
        #SourceGihubRepoUrl:
        #  Ref: SourceGihubRepoUrl   
        Environment:
          Ref: Environment     

  TriggerBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
        - PolicyName: lambda-copier
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                Resource: '*'                  
  LambdaTriggerStartsBuild:
    Type: AWS::Lambda::Function
    DependsOn:
      - CodeBuildProject
    Properties:
      Description: Start starts build for a code build project
      Handler: index.handler
      Runtime: python3.7
      Role: !GetAtt "TriggerBuildRole.Arn"
      Timeout: 20
      MemorySize: 128
      Code:
        ZipFile: !Sub |
          import boto3
          import os

          def handler(event, context):
              client = boto3.client("codepipeline")
              response = client.start_pipeline_execution(name=os.getenv("BACKUP_PIPELINE_NAME"))
              print(f"CodePipeline Response : {response}")
      Environment:
        Variables:
          PROJECT_NAME: !GetAtt "CodeBuildProject.Outputs.BackupPipelineBuild"
          BACKUP_PIPELINE_NAME: !Sub ${AWS::StackName}-${Environment}-Pipeline
  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "rate(10 minutes)"
      State: "ENABLED"      
      Targets:
        - Arn: !GetAtt LambdaTriggerStartsBuild.Arn
          Id: "LambdaTriggerStartsBuild"
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaTriggerStartsBuild
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "ScheduledRule"
          - "Arn"
